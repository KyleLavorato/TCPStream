#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <map>

#include "StringMatchingIdentifier.h"

using namespace std;

int main(int argc, char *argv[]) {

	// Parse arguments
    if (argc < 4 || argc > 4) {
        cerr << "Usage: ./identifier --approach=<approach> <stream file> <config file>" << endl;
        cerr << "THIS ISN'T DONE" << endl;
        cerr << "Explanation: The stream file is a file generated by the shitty_wireshark" << endl;
        cerr << "program. The config file is created by the user to meet their needs. The syntax" << endl;
        cerr << "for the config file is as follows:" << endl;
        cerr << "" << endl;
        cerr << "    <protocol>:<string 1>,<string 2>,<string 3>,<...>,<string n>" << endl;
        cerr << "" << endl;
        cerr << "Here's an example to try to identify a stream as containing HTTP if the string" << endl;
        cerr << "\"HTTP/1.1\" is found:" << endl;
        cerr << "" << endl;
        cerr << "    HTTP:HTTP/1.1" << endl;
        return -1;
    }

    string approach = argv[1];
    string streamFileName = argv[2];    
    string configFileName = argv[3];

    if (approach == "--approach=StringMatching") {

    	StringMatchingIdentifier identifier;

    	identifier.readConfigFile(configFileName);
    	identifier.readStreamFile(streamFileName);

    	for (unsigned char* packet : identifier.get_packets()) {

    		// Print out the packet protocol
    		cout << "Packet " << packet << " is " << identifier.identify(packet) << endl;
    	}

    	cout << "Hello world" << endl;
    }

    return 0;
}